/**
 * This file was generated by kysely-codegen.
 * Please do not edit it manually.
 */

import type { ColumnType } from "kysely";

export type Generated<T> = T extends ColumnType<infer S, infer I, infer U>
  ? ColumnType<S, I | undefined, U>
  : ColumnType<T, T | undefined, T>;

export type Role = "ADMIN" | "STUDENT" | "VIEWER";

export type Timestamp = ColumnType<Date, Date | string, Date | string>;

export interface Answers {
  answer: string;
  answer_id: Generated<number>;
  for_student_id: string | null;
  question_id: number;
}

export interface Questions {
  begin_time: Timestamp | null;
  created_on: Generated<Timestamp>;
  end_time: Timestamp | null;
  global_answer: boolean;
  points: number;
  question_description: string;
  question_id: Generated<number>;
  question_title: string;
  tournament_id: number;
}

export interface Submissions {
  correct: boolean;
  created_on: Generated<Timestamp>;
  flag: string;
  question_id: number;
  student_id: string;
  submission_id: Generated<number>;
}

export interface Tournaments {
  begin_time: Generated<Timestamp>;
  description: string | null;
  end_time: Timestamp | null;
  name: string;
  t_id: Generated<number>;
}

export interface Users {
  created_on: Generated<Timestamp>;
  email: string;
  firstname: string;
  lastname: string;
  password: string | null;
  role: Generated<Role>;
  student_id: string;
}

export interface DB {
  Answers: Answers;
  Questions: Questions;
  Submissions: Submissions;
  Tournaments: Tournaments;
  Users: Users;
}
